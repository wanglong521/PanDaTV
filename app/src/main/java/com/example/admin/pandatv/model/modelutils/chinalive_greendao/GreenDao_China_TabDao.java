package com.example.admin.pandatv.model.modelutils.chinalive_greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.example.admin.pandatv.model.modelutils.pandalive_greendao.DaoSession;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "GREEN_DAO__CHINA__TAB".
*/
public class GreenDao_China_TabDao extends AbstractDao<GreenDao_China_Tab, Long> {

    public static final String TABLENAME = "GREEN_DAO__CHINA__TAB";

    /**
     * Properties of entity GreenDao_China_Tab.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property ABoolean = new Property(1, Boolean.class, "aBoolean", false, "A_BOOLEAN");
        public final static Property Tabtitle = new Property(2, String.class, "tabtitle", false, "TABTITLE");
    };


    public GreenDao_China_TabDao(DaoConfig config) {
        super(config);
    }
    
    public GreenDao_China_TabDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"GREEN_DAO__CHINA__TAB\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"A_BOOLEAN\" INTEGER," + // 1: aBoolean
                "\"TABTITLE\" TEXT);"); // 2: tabtitle
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"GREEN_DAO__CHINA__TAB\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, GreenDao_China_Tab entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Boolean aBoolean = entity.getABoolean();
        if (aBoolean != null) {
            stmt.bindLong(2, aBoolean ? 1L: 0L);
        }
 
        String tabtitle = entity.getTabtitle();
        if (tabtitle != null) {
            stmt.bindString(3, tabtitle);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, GreenDao_China_Tab entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Boolean aBoolean = entity.getABoolean();
        if (aBoolean != null) {
            stmt.bindLong(2, aBoolean ? 1L: 0L);
        }
 
        String tabtitle = entity.getTabtitle();
        if (tabtitle != null) {
            stmt.bindString(3, tabtitle);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public GreenDao_China_Tab readEntity(Cursor cursor, int offset) {
        GreenDao_China_Tab entity = new GreenDao_China_Tab( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getShort(offset + 1) != 0, // aBoolean
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2) // tabtitle
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, GreenDao_China_Tab entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setABoolean(cursor.isNull(offset + 1) ? null : cursor.getShort(offset + 1) != 0);
        entity.setTabtitle(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(GreenDao_China_Tab entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(GreenDao_China_Tab entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
